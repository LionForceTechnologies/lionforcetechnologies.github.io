{"version":3,"sources":["routes/rolepermission/index.js"],"names":["Rolepermission","props","rolepermissionid","useSelector","crud","rolepermission","ifdeleted","deletepermissionid","roles","getrole","pagepermissions","pagepermission","useState","role","setrole","edit","setedit","stop","setstop","custom","setcustom","deleteid","setdeleteid","dispatch","useDispatch","Form","useForm","form","deletesuccess","setdeletesuccess","deletes","setdeletes","permissionsmapped","setpermissionsmapped","permissionid","setpermissionid","swarning","setswarning","end","setend","Option","Select","Edit","e","editrolepermission","target","getAttribute","access","checked","Delete","useEffect","getpagepermission","getrolepermission","cleardeleterolepermission","setFieldsValue","data","role_id","role_permission","alert","i","document","getElementById","old","length","indexOf","map","item","page","menu","action","style","display","type","marginRight","height","onChange","id","data-id","index","key","data1","onClick","className","role_data","value","initialValues","remember","name","onFinish","values","putpagepermission","updatepagepermission","resetFields","onFinishFailed","errorInfo","console","log","xl","lg","md","sm","xs","title","Item","rules","required","message","newCurrency","placeholder","columns","dataIndex","dataSource","htmlType","show","showCancel","confirmBtnText","cancelBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","deletepermission","status","onCancel","success","warning"],"mappings":"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","file":"static/js/13.07b8590c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Divider, Table, Col, Row, Button, Checkbox, Form, Input, Select } from \"antd\";\r\nimport axios from 'axios';\r\nimport {cleardeleterolepermission, getpagepermission, getrole, putpagepermission, editrolepermission,getrolepermission,updatepagepermission,deletepermission } from \"../../appRedux/actions/Crud\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nconst Rolepermission = (props) => {\r\n    const rolepermissionid = useSelector(({ crud }) => crud.rolepermissionid);\r\n    const rolepermission = useSelector(({ crud }) => crud.rolepermission);\r\n    const ifdeleted = useSelector(({ crud }) => crud.deletepermissionid);\r\n    const roles = useSelector(({ crud }) => crud.getrole);\r\n    const pagepermissions = useSelector(({ crud }) => crud.pagepermission);\r\n    const [role, setrole] = useState('');\r\n    const [pass, setpass] = useState('');\r\n    const [name, setname] = useState('');\r\n    const [contact, setcontact] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [edit, setedit] = useState(0);\r\n    const [stop, setstop] = useState(0);\r\n    const [custom, setcustom] = useState(false);\r\n    const [deleteid, setdeleteid] = useState(false);\r\n    const red_data = useSelector(({ crud }) => crud.getrole);\r\n    const dispatch = useDispatch();\r\n    const [form] = Form.useForm();\r\n    const [deletesuccess, setdeletesuccess] = useState(false);\r\n    const [deletes, setdeletes] = useState(0);\r\n    const [datas, setdatas] = useState([]);\r\n    const [edits, setedits] = useState('');\r\n    const [forhk, setforhk] = useState(0);\r\n    const [permissionsmapped, setpermissionsmapped] = useState([]);\r\n    const [permissionid, setpermissionid] = useState('');\r\n    const [swarning, setswarning] = useState(false);\r\n    const [end, setend] = useState(0);\r\n    const { Option } = Select;\r\n    useEffect(() => {\r\n        if (stop === 0) {\r\n            dispatch(getrole())\r\n            dispatch(getpagepermission())\r\n            dispatch(getrolepermission())\r\n        }\r\n        setstop(1)\r\n    })\r\n    useEffect(() => {\r\n        if (ifdeleted == 'success') {\r\n            if (deletes != 0) {\r\n                setdeletesuccess(true)\r\n                dispatch(cleardeleterolepermission(''))\r\n                setdeletes(1)\r\n            }\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        if (rolepermissionid !== '') {\r\n            if (edit !== 0) {\r\n// alert(rolepermissionid.data[0].role)\r\n                if ((rolepermissionid != 'no data found')) {\r\n                    form.setFieldsValue({\r\n                        role: rolepermissionid.data[0].role,\r\n                    })\r\n                    setrole(rolepermissionid.data[0].role_id)\r\n                    setpermissionsmapped(rolepermissionid.data[0].role_permission)\r\n                } else {\r\n                    alert('there is no record')\r\n                }\r\n\r\n                setedit(0)\r\n            }\r\n        }\r\n    })\r\nuseEffect(()=>{\r\n\r\n    if(rolepermissionid != ''){\r\n        if(end === 0){\r\n\r\n            setpermissionsmapped([])\r\n            for(let i=0;i<rolepermissionid.data[0].role_permission.length;i++){\r\n                if(document.getElementById(rolepermissionid.data[0].role_permission[i])){\r\n                    document.getElementById(rolepermissionid.data[0].role_permission[i]).checked = true\r\n                    setpermissionsmapped(old => [...old, rolepermissionid.data[0].role_permission[i]])\r\n                }\r\n                // alert(rolepermissionid.data[0].role_permission[i])\r\n            }\r\nsetend(1)\r\n\r\n        }\r\n\r\n        \r\n    }\r\n})\r\n    useEffect(() => {\r\n        if (permissionid !== '') {\r\n\r\n            // let permission = permissionsmapped;\r\n            if (permissionsmapped.indexOf(permissionid) == -1) {\r\n                // let pmapped = permissionsmapped;\r\n                // permission.push(permissionid);\r\n                setpermissionsmapped(old => [...old, permissionid])\r\n            }\r\n        }\r\n\r\n\r\n    }, [permissionid])\r\n    function Edit(e) {\r\n        dispatch(editrolepermission(e.target.getAttribute('data-id')))\r\n        setedit(1)\r\n    }\r\n    // let permissionsmapped = []\r\n\r\n    function access(e) {\r\n        // if(e.target.value == 'on'){\r\n        //     e.target.value = 'off'\r\n        // }\r\n        // let pmapped = permissionsmapped\r\n        if (e.target.checked == true) {\r\n            setpermissionid(e.target.getAttribute('data-id'))\r\n\r\n        }\r\n    }\r\n\r\n    function Delete(e) {\r\n        setdeleteid(e.target.getAttribute('data-id'))\r\n        setcustom(true)\r\n    }\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const onFinish = values => {\r\n\r\n        if (rolepermissionid != '') {\r\n            if (permissionsmapped.length == 0) {\r\n                setswarning(true)\r\n            }\r\n            else {\r\n                dispatch(putpagepermission({\r\n                    role_id: role,\r\n                    role_permission: permissionsmapped,\r\n                    id : rolepermissionid.data[0].id\r\n                }))\r\n            }\r\n        }\r\n        else if (rolepermissionid == '') {\r\n\r\n            if (permissionsmapped.length == 0) {\r\n                setswarning(true)\r\n            }\r\n            else {\r\n                dispatch(updatepagepermission({\r\n                    role_id: role,\r\n                    role_permission: permissionsmapped\r\n                }))\r\n            }\r\n            setedit(0);\r\n        }\r\n        // alert(permissionsmapped.length)\r\n\r\n\r\n        form.resetFields();\r\n\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'Page',\r\n            dataIndex: 'page',\r\n            key: 'page',\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n        }\r\n    ];\r\n    let data = [];\r\n    // alert(typeof pagepermissions)\r\n    if (pagepermissions.length > 0) {\r\n        if (rolepermissionid !== '') {\r\n            // rolepermissionid.data[0].role_permission[0]\r\n            data = pagepermissions.map((item, i) => {\r\n                return {\r\n                    page: item.menu,\r\n                    action: (<><div style={{ display: 'flex' }}><input type=\"checkbox\" style={{ marginRight: '7px', height: '15px' }} onChange={access} id={item.id} data-id={item.id} /></div></>),\r\n                    index: item.id,\r\n                    key: item.id\r\n                }\r\n            });\r\n        } else {            \r\n            data = pagepermissions.map((item, i) => {\r\n                return {\r\n                    page: item.menu,\r\n                    action: (<><div style={{ display: 'flex' }}><input type=\"checkbox\" style={{ marginRight: '7px', height: '15px' }} onChange={access} data-id={item.id} /></div></>),\r\n                    index: item.id,\r\n                    key: item.id\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const columns1 = [\r\n        {\r\n            title: 'Role',\r\n            dataIndex: 'role',\r\n            key: 'role',\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n        }\r\n    ];\r\n    let data1 = [];\r\n\r\n    if (rolepermission.length > 0) {\r\n        data1 = rolepermission.map((item, i) => {\r\n            return {\r\n                role: item.role,\r\n                action: (<><div style={{ display: 'flex' }}><i style={{ marginRight: '7px', height: '15px' }} onClick={Edit} data-id={item.id} className=\"icon icon-edit\" /><i data-id={item.id} onClick={Delete} style={{ height: '15px' }} className=\"icon icon-trash\" /></div></>),\r\n                index: item.id,\r\n                key: item.id\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    function deleteconfirm() {\r\n        setcustom(false)\r\n        dispatch(deletepermission({ id: deleteid, status: 2 }))\r\n        setdeletes(1)\r\n    }\r\n    function deletecancel() {\r\n        setcustom(false)\r\n    }\r\n    function confirmwarning() {\r\n        setswarning(false)\r\n    }\r\n    function deletestatus() {\r\n\r\n        // setdatas(newda)\r\n        setdeleteid('')\r\n        setdeletesuccess(false)\r\n    }\r\n    const onCurrencyChange = newCurrency => {\r\n        setrole(newCurrency)\r\n    };\r\n    let role_data = []\r\n    if (roles.length > 0) {\r\n        role_data = roles.map((item, i) => {\r\n            return (<Option key={item.id} value={item.id}>{item.role}</Option>)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                form={form}\r\n                initialValues={{ remember: true }}\r\n                name=\"usercreation\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                className=\"gx-signin-form gx-form-row0\">\r\n                <Row>\r\n                    <Col xl={12} lg={12} md={12} sm={24} xs={24}>\r\n                        <Card title=\"Roles capability\">\r\n                            <Form.Item\r\n                                rules={[{ required: true, message: 'This field is required' }]} name=\"role\">\r\n                                <Select\r\n                                    value={role}\r\n                                    onChange={onCurrencyChange}\r\n                                    placeholder=\"Role\"\r\n                                >\r\n                                    {role_data}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Table className=\"gx-table-responsive\" columns={columns} dataSource={data} />\r\n\r\n                            <Col xl={4} lg={4} md={4} sm={24} xs={24}>\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" className=\"gx-mb-0\" htmlType=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={12} lg={12} md={12} sm={24} xs={24}>\r\n                        <Card title=\"List Of Roles Capability\">\r\n                            <Table className=\"gx-table-responsive\" columns={columns1} dataSource={data1} />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            <SweetAlert show={custom}\r\n                custom\r\n                showCancel\r\n                confirmBtnText={`OK`}\r\n                cancelBtnText={`Cancel`}\r\n                confirmBtnBsStyle=\"primary\"\r\n                cancelBtnBsStyle=\"default\"\r\n                // customIcon={\"https://via.placeholder.com/500X330\"}\r\n                title={`Do you want to delete?`}\r\n                onConfirm={deleteconfirm}\r\n                onCancel={deletecancel}\r\n            >\r\n                {/* <IntlMessages id=\"sweetAlerts.youWillFind\"/> */}\r\n            </SweetAlert>\r\n            <SweetAlert show={deletesuccess} success title={`Deleted Successfully`}\r\n                onConfirm={deletestatus}>\r\n                {/* <IntlMessages id=\"sweetAlerts.btnClicked\"/> */}\r\n            </SweetAlert>\r\n            <SweetAlert show={swarning} warning title={`Select any page for this role `}\r\n                onConfirm={confirmwarning}>\r\n                {/* <IntlMessages id=\"sweetAlerts.btnClicked\"/> */}\r\n            </SweetAlert>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rolepermission; \r\n"],"sourceRoot":""}